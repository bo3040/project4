package FileSystemApp;

import java.io.File;

/**
 * FileSystemApp/_FileSystemStub.java . Generated by the IDL-to-Java compiler
 * (portable), version "3.2" from FileSystem.idl Thursday, November 10, 2016
 * 5:57:37 PM EST
 *
 * This helps the client side by packing up the parameters, invoking the call to
 * the server and unpacking the results
 */

public class _FileSystemStub extends org.omg.CORBA.portable.ObjectImpl implements FileSystemApp.FileSystem
{
	@Override
	public boolean openReadFile(String fileName) 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("openReadFile", true);
			$out.write_string(fileName);
			$in = _invoke($out);
			boolean $result = $in.read_boolean();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return openReadFile(fileName);
		} finally
		{
			_releaseReply($in);
		}
	}

	@Override
	public boolean openWriteFile(String fileName) 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("openWriteFile", true);
			$out.write_string(fileName);
			$in = _invoke($out);
			boolean $result = $in.read_boolean();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return openWriteFile(fileName);
		} finally
		{
			_releaseReply($in);
		}
	}

	@Override
	public boolean deleteFile(String fileName) 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("deleteFile", true);
			$out.write_string(fileName);
			$in = _invoke($out);
			boolean $result = $in.read_boolean();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return deleteFile(fileName);
		} finally
		{
			_releaseReply($in);
		}
	}

	@Override
	public boolean closeFile(String fileName) 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("closeFile", true);
			$out.write_string(fileName);
			$in = _invoke($out);
			boolean $result = $in.read_boolean();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return closeFile(fileName);
		} finally
		{
			_releaseReply($in);
		}
	}

	@Override
	public String filesInSystem() 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("closeFile", true);
			$in = _invoke($out);
			String $result = $in.read_string();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return filesInSystem();
		} finally
		{
			_releaseReply($in);
		}
	}

	@Override
	public String filesOpenInSystem() 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("closeFile", true);
			$in = _invoke($out);
			String $result = $in.read_string();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return filesOpenInSystem();
		} finally
		{
			_releaseReply($in);
		}
	}

	@Override
	public boolean isFileOpen(String fileName) 
	{
		// TODO Auto-generated method stub
		return false;
	}
	
	
	/**
	 * @see FileSystemApp.FileSystemOperations#readFile(java.lang.String)
	 */
	public String readFile(String title)
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("readFile", true);
			$out.write_string(title);
			$in = _invoke($out);
			String $result = $in.read_string();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return readFile(title);
		} finally
		{
			_releaseReply($in);
		}
	}
	
	public String getFileTimeStamp(String fileTitle)
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("getFileTimeStamp", true);
			$out.write_string(fileTitle);
			$in = _invoke($out);
			String $result = $in.read_string();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return getFileTimeStamp(fileTitle);
		} finally
		{
			_releaseReply($in);
		}
	}
	
	@Override
	public String updateRecord(int record, String fileName, String modifications) 
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("getFileTimeStamp", true);
			$out.write_string(fileName);
			$out.write_long(record);
			$out.write_string(modifications);
			$in = _invoke($out);
			String $result = $in.read_string();
			return $result;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			return updateRecord(record, fileName, modifications);
		} finally
		{
			_releaseReply($in);
		}
	}
	
	/**
	 * @see FileSystemApp.FileSystemOperations#shutdown()
	 */
	public void shutdown()
	{
		org.omg.CORBA.portable.InputStream $in = null;
		try
		{
			org.omg.CORBA.portable.OutputStream $out = _request("shutdown", false);
			$in = _invoke($out);
			return;
		} catch (org.omg.CORBA.portable.ApplicationException $ex)
		{
			$in = $ex.getInputStream();
			String _id = $ex.getId();
			throw new org.omg.CORBA.MARSHAL(_id);
		} catch (org.omg.CORBA.portable.RemarshalException $rm)
		{
			shutdown();
		} finally
		{
			_releaseReply($in);
		}
	}

	// Type-specific CORBA::Object operations
	private static String[] __ids =
	{ "IDL:FileSystemApp/FileSystem:1.0" };

	/**
	 * @see org.omg.CORBA.portable.ObjectImpl#_ids()
	 */
	public String[] _ids()
	{
		return (String[]) __ids.clone();
	}

	private void readObject(java.io.ObjectInputStream s) throws java.io.IOException
	{
		String str = s.readUTF();
		String[] args = null;
		java.util.Properties props = null;
		org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init(args, props);
		try
		{
			org.omg.CORBA.Object obj = orb.string_to_object(str);
			org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate();
			_set_delegate(delegate);
		} finally
		{
			orb.destroy();
		}
	}

	private void writeObject(java.io.ObjectOutputStream s) throws java.io.IOException
	{
		String[] args = null;
		java.util.Properties props = null;
		org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init(args, props);
		try
		{
			String str = orb.object_to_string(this);
			s.writeUTF(str);
		} finally
		{
			orb.destroy();
		}
	}

	



} 
