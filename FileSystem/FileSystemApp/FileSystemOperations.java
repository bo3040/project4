package FileSystemApp;

/**
 * FileSystemApp/FileSystemOperations.java . Generated by the IDL-to-Java
 * compiler (portable), version "3.2" from FileSystem.idl Thursday, November 10,
 * 2016 5:57:37 PM EST
 */

public interface FileSystemOperations
{
	/**
	 * open a file on the server and dump its contents to the client
	 * @param fileName the name of the file
	 * @return the contents of the file
	 */
	String readFile(String fileName);
	
	/**
	 * Opens a file for read.
	 * @param fileName
	 * @return
	 */
	boolean openReadFile(String fileName);
	
	/**
	 * Opens a file for write.
	 * @param fileName
	 * @return
	 */
	boolean openWriteFile(String fileName);
	
	/**
	 * Deletes a file
	 * @param fileName
	 * @return 
	 */
	boolean deleteFile(String fileName);
	/**
	 * Closes a file.
	 * @param fileName
	 * @return
	 */
	boolean closeFile(String fileName);
	
	/**
	 * Update a record in a file.
	 * @param record The record from the file.
	 * @param fileName The file the Record is from
	 * @param modifications The string of the new record
	 * @return
	 */
	String updateRecord(int record , String fileName, String modifications);
	
	/**
	 * 
	 * @return the names of the files in the system.
	 */
	String filesInSystem();
	
	/**
	 * 
	 * @return the names of the files that are open in the system.
	 */
	String filesOpenInSystem();
	
	/**
	 * 
	 * @param fileName the name of the file to check.
	 * @return true if the file is open, false if it is not.
	 */
	boolean isFileOpen(String fileName);
	
	
	/**
	 * Gets the last modified time from a file.
	 * @param fileName the name of the file.
	 * @return the last time a file was modified.
	 */
	String getFileTimeStamp(String fileName);

	/**
	 * make the server shut down
	 */
	void shutdown();

	
}
